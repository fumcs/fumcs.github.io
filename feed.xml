<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://fumcs.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://fumcs.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-08-15T16:44:39+00:00</updated><id>https://fumcs.github.io/feed.xml</id><title type="html">blank</title><subtitle>Ferdowsi University of Mashhad, Computer Science Dept. </subtitle><entry><title type="html">Bike Rental System, Part III, PyG-Temporal dataset format</title><link href="https://fumcs.github.io/blog/2023/Bike-Part-III/" rel="alternate" type="text/html" title="Bike Rental System, Part III, PyG-Temporal dataset format"/><published>2023-08-17T00:00:00+00:00</published><updated>2023-08-17T00:00:00+00:00</updated><id>https://fumcs.github.io/blog/2023/Bike-Part-III</id><content type="html" xml:base="https://fumcs.github.io/blog/2023/Bike-Part-III/"><![CDATA[<h1 id="graph-creation">Graph Creation</h1> <p>As previously discussed in the initial two sections, we possess a dataset requiring conversion into graphs subsequent to the Exploratory Data Analysis (EDA) phase. In the subsequent content, we will delve into the procedural steps of this particular stage.</p> <p>divvybikes</p> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/rental_bike/part_III/dataset-divvybikes.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div> <p>Note: We need to create a new feature called “duration” for the DivvyBike dataset.</p> <h2 id="node-features">Node features</h2> <p>The following code section adeptly processes the bike trip data, ultimately generating normalized node features that effectively encapsulate the distribution of incoming and outgoing trips for each individual bike station within the prospective graph dataset. This code section is crucial for analyzing and visualizing bike-sharing demand, which can be valuable for bike-sharing operators to plan for the distribution of stations across the service area.</p> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/rental_bike/part_III/node_feature-divvybikes.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div> <h2 id="edge-creation">Edge creation</h2> <p>This section of the code effectively handles the trip data to calculate distances between stations and define edges for the graph. It involves the creation of a matrix that includes station pairs, their distances, and determines whether an edge should be formed between them based on a given threshold. The resulting edge matrix is a vital component in constructing the graph that represents the connectivity between bike stations.</p> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/rental_bike/part_III/edge_creation-divvybikes.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div> <h2 id="static--dynamic-edges">Static &amp; dynamic edges</h2> <p>In this section of the code, we are establishing both static and dynamic edge features for the construction of the graph dataset. These features are crucial in defining the attributes and characteristics associated with the edges connecting bike stations within the graph. These components contribute to defining static and dynamic edge features for the graph dataset. Static edge features remain constant, providing important information about the connectivity between bike stations. On the other hand, dynamic edge features vary over time, capturing the evolving nature of bike-sharing demand and trip-specific attributes. This comprehensive approach ensures that the graph accurately represents the relationships and characteristics of the bike stations and their connections.</p> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/rental_bike/part_III/static_dynamic_edge-divvybikes.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div> <h2 id="graph-creation-1">Graph creation</h2> <p>This section of the code efficiently manages the creation of the graph dataset by iteratively processing time intervals, generating snapshots of data, calculating edge features, and organizing the necessary attributes for each interval. The outcome is a comprehensive dataset that can be utilized for training and analysis using graph-based machine learning models.</p> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/rental_bike/part_III/graph_creation-divvybikes.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div> <p>This section of the code enables the presentation of a tangible example showcasing the components of the graph snapshot. It plays a crucial role in comprehending the dataset’s structure and ensuring the uniformity of dimensions across different features and labels within each snapshot.</p> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/rental_bike/part_III/exp-divvybikes.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div> <p>In this code section, the utilization of the DynamicGraphTemporalSignal class from the torch_geometric_temporal.signal module enables the creation of a dynamic graph dataset. This dataset is constructed by incorporating the provided edge indices, edge features, node features, labels, and label indices.</p> <hr/> <p>The resulting dataset object, generated using the DynamicGraphTemporalSignal class, is now ready for utilization in various graph-based temporal analysis and machine learning tasks. It effectively encapsulates the dynamic graph data in a format that is compatible with PyTorch Geometric’s temporal signal processing capabilities.</p> <div class="jupyter-notebook" style="position: relative; width: 100%; margin: 0 auto;"> <div class="jupyter-notebook-iframe-container"> <iframe src="/assets/jupyter/rental_bike/part_III/DynamicGraphTemporalSignal-divvybikes.ipynb.html" style="position: absolute; top: 0; left: 0; border-style: none;" width="100%" height="100%" onload="this.parentElement.style.paddingBottom = (this.contentWindow.document.documentElement.scrollHeight + 10) + 'px'"></iframe> </div> </div> <hr/> <p>edge_indices: A tensor containing the indices of the edges in the graph.</p> <p>edge_features: A tensor containing the features of the edges in the graph.</p> <p>xs: A tensor containing the node features for each time step.</p> <p>ys: A tensor containing the target values for each time step.</p> <p>y_indices: A tensor containing the indices of the target values in the ys tensor (optional). The resulting dataset object can be used for training and testing machine learning models that operate on spatiotemporal data. —</p> <ul> <li>Part I: <a href="/blog/2023/Bike-Part-I/">Introduction to Bike Rental Platforms, Datasets and Methods</a></li> <li>Part II: <a href="/blog/2023/Bike-Part-II/">Exploratory Data Analysis on Bike Rental dataset</a></li> </ul>]]></content><author><name>P. MottahariNejad</name></author><category term="distill"/><category term="formatting"/><summary type="html"><![CDATA[How to transform bike tabular data to PyG-Temporal format?]]></summary></entry><entry><title type="html">Bike Rental System, Part II, EDA</title><link href="https://fumcs.github.io/blog/2023/Bike-Part-II/" rel="alternate" type="text/html" title="Bike Rental System, Part II, EDA"/><published>2023-08-15T00:00:00+00:00</published><updated>2023-08-15T00:00:00+00:00</updated><id>https://fumcs.github.io/blog/2023/Bike-Part-II</id><content type="html" xml:base="https://fumcs.github.io/blog/2023/Bike-Part-II/"><![CDATA[<h1 id="exploratory-data-analysis-eda">Exploratory Data Analysis (EDA)</h1> <h3 id="we-have-two-datasets-named-bikeshare-and-divvtbikes-in-the-following-we-will-examine-these-two">We have two datasets named bikeshare and divvtbikes. In the following, we will examine these two.</h3> <p>Here we have some statical reports on a dataset.</p> <h2 id="data-visualization">Data visualization</h2> <h3 id="trips-per-hour-in-a-month">trips per hour in a month:</h3> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/GNN/trips_per_hour-scatterplot-divvybikes-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/GNN/trips_per_hour-scatterplot-divvybikes-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/GNN/trips_per_hour-scatterplot-divvybikes-1400.webp"/> <img src="/assets/img/GNN/trips_per_hour-scatterplot-divvybikes.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="histogram-of-number-of-stations-with-a-certain-number-of-arrivalsdepartures-in-a-week">Histogram of Number of Stations with a certain number of Arrivals+Departures in a Week:</h3> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/GNN/Arrivals+Departures-histogram-divvybikes-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/GNN/Arrivals+Departures-histogram-divvybikes-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/GNN/Arrivals+Departures-histogram-divvybikes-1400.webp"/> <img src="/assets/img/GNN/Arrivals+Departures-histogram-divvybikes.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>The histogram provides a concise representation of the distribution of bike stations, categorized by the quantity of arrivals and departures within a week. The analysis reveals that the majority of bike stations exhibit limited engagement, with comparatively fewer incoming and outgoing journeys. Conversely, only a minor portion of stations encounter notably elevated trip figures.</li> </ul> <h2 id="trends--analysis">Trends + analysis</h2> <p>We also analyze patterns in the monthly, weekly, and daily periods of dataset to extract valuable information.</p> <h3 id="weekly">weekly</h3> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/GNN/weekly-bar-divvybikes-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/GNN/weekly-bar-divvybikes-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/GNN/weekly-bar-divvybikes-1400.webp"/> <img src="/assets/img/GNN/weekly-bar-divvybikes.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>The bar plot provides an efficient visualization of the distribution of bike trips based on the day of the week over a three-month period. The data analysis uncovers clear patterns in bike-sharing demand, with higher usage during weekends (Saturday and Sunday) and Tuesday, and moderate demand on weekdays (Monday, Thursday, and Friday). This information can be valuable for bike-sharing operators to plan for the distribution of stations across the service area.</li> </ul> <h3 id="working-days-vs-weekend">working days vs weekend</h3> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/GNN/days_vs_weekend-bar-divvybikes-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/GNN/days_vs_weekend-bar-divvybikes-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/GNN/days_vs_weekend-bar-divvybikes-1400.webp"/> <img src="/assets/img/GNN/days_vs_weekend-bar-divvybikes.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>The bar plot provides a clear visualization of the disparity in bike-sharing demand between working days and weekends. The analysis reveals that bike trips are significantly more frequent and widespread on working days, primarily driven by higher commuting and daily transportation needs. In contrast, bike-sharing experiences a decrease in usage during weekends, as individuals engage in recreational activities and have reduced work commitments.</li> </ul> <h3 id="daily">daily</h3> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/GNN/daily-bar-divvybikes-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/GNN/daily-bar-divvybikes-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/GNN/daily-bar-divvybikes-1400.webp"/> <img src="/assets/img/GNN/daily-bar-divvybikes.png" class="img-fluid rounded z-depth-1" width="auto" height="auto" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ul> <li>The line plot provides an effective visualization of the temporal distribution of bike trips throughout the day. The data analysis uncovers distinctive trends in bike-sharing demand during different hours, with significant peaks observed during the morning and evening rush hours. This information can be valuable for bike-sharing operators to plan for the distribution of bikes and stations across the service area.</li> </ul> <hr/> <ul> <li>Part I: <a href="/blog/2023/Bike-Part-I/">Introduction to Bike Rental Platforms, Datasets and Methods</a></li> <li>Part III: <a href="/blog/2023/Bike-Part-III/">How to transform bike tabular data to PyG-Temporal format?</a></li> </ul>]]></content><author><name>E. Hosseini</name></author><category term="distill"/><category term="formatting"/><summary type="html"><![CDATA[Exploratory Data Analysis]]></summary></entry><entry><title type="html">Bike Rental System, Part I, Introduction</title><link href="https://fumcs.github.io/blog/2023/Bike-Part-I/" rel="alternate" type="text/html" title="Bike Rental System, Part I, Introduction"/><published>2023-07-10T00:00:00+00:00</published><updated>2023-07-10T00:00:00+00:00</updated><id>https://fumcs.github.io/blog/2023/Bike-Part-I</id><content type="html" xml:base="https://fumcs.github.io/blog/2023/Bike-Part-I/"><![CDATA[<h1 id="bike-rental-system-introduction-datasets-graph-neural-networks">Bike Rental System: Introduction, Datasets, Graph Neural Networks</h1> <p>Welcome to Part I of our blog series on building a Bike Rental software system! In this post, we will provide an introduction to the Bike rental system, discuss the datasets involved, and explore the concept of graph neural networks and their application to this domain.</p> <h2 id="introduction-to-bike-rental-system">Introduction to Bike Rental System</h2> <p>Bike rental systems have gained popularity across the globe as a convenient and eco-friendly mode of transportation. These systems typically allow users to rent bicycles for short periods, making it ideal for commuters, tourists, or anyone looking for an alternative mode of transport. With the increasing demand for such systems, building efficient software becomes crucial.</p> <p>The primary goal of our Bike Rental software system is to enable users to easily browse and rent bikes, track usage, and manage logistics. This requires a comprehensive understanding of the rental process, user interaction, and efficient data management.</p> <h2 id="datasets">Datasets</h2> <p>To build a successful Bike Rental software system, we need access to high-quality datasets that capture the relevant information. These datasets will serve as the foundation for various tasks such as exploratory data analysis and machine learning.</p> <p>Some examples of datasets that can be utilized in this context include:</p> <ul> <li><a href="https://divvybikes.com/">Ride on, Chicago</a></li> <li><a href="https://bikeshare.metro.net/about/data/">The Metro Bike Share system</a></li> </ul> <p>These datasets, along with their proper preprocessing and integration, lay the groundwork for meaningful analysis, model building, and system implementation.</p> <p>One of the new aaprocahes for prediction in a bike rental system is Temporal Graph Neural Networks (TGNN), a type of Graph Neural Networks. <strong>The main porpose of these blog post series, is to show how we make the above dataset, suitable for TGNN.</strong> It is related to <a href="https://www.youtube.com/watch?v=XPTwvvlHaUA">Converting a Tabular Dataset to a Temporal Graph Dataset</a>. We will provide the details of our approach.</p> <h2 id="graph-neural-networks-and-temporal-graph-neural-networks">Graph Neural Networks and Temporal Graph Neural Networks</h2> <p>Graph Neural Networks (GNNs) have gained significant attention in various domains due to their ability to model and extract information from graph-structured data. In the context of bike rental systems, GNNs offer a promising approach to capture the complex relationships between bike stations, users, and other relevant entities.</p> <p>GNNs allow us to represent the bike rental system as a graph, with bike stations as nodes and rental patterns as edges. By incorporating graph convolutions, GNNs can aggregate and propagate information across the network, enabling us to make predictions and draw insights.</p> <p>Temporal Graph Neural Networks (TGNs) extend the capabilities of GNNs by considering temporal dynamics within the graph. As bike rentals exhibit temporal dependencies, TGNs enable us to capture the change in user behavior over time, improve prediction accuracy, and better understand long-term trends.</p> <p>Utilizing GNNs and TGNs, we can harness the power of graph-based modeling to tackle challenges such as demand prediction, anomaly detection, and recommendation systems within the Bike Rental software system.</p> <h2 id="conclusion-and-next-steps">Conclusion and Next Steps</h2> <p>In this blog post, we provided an introduction to the Bike Rental software system, discussed relevant datasets, and explored the application of graph neural networks and temporal graph neural networks.</p> <p>In Part II of this series, we will dive into the process of transforming tabular data to PyG-Temporal format for bike datasets. Stay tuned for a detailed guide on data preparation and pre-processing techniques!</p> <p>Other parts of these series (under construction):</p> <ul> <li>Part II: <a href="/blog/2023/Bike-Part-II/">Exploratory Data Analysis on Bike Rental dataset</a></li> <li>Part III: <a href="/blog/2023/Bike-Part-III/">How to transform bike tabular data to PyG-Temporal format?</a></li> <li>Part IV: <a href="#">Machine learning on Bike rental dataset</a></li> </ul> <h2 id="references">References:</h2> <ul> <li>Bike Sharing Dataset. (2018). Retrieved from https://www.kaggle.com/hmavrodiev/london-bike-sharing-dataset</li> <li>Hamilton, W., Ying, Z., &amp; Leskovec, J. (2017). Inductive representation learning on large graphs. In Advances in Neural Information Processing Systems (pp. 1025-1035).</li> <li>Su, J., Vargas, D. V., &amp; Sakurai, K. (2019). A survey on heterogeneous data mining: from unstructured data to graphs. ACM SIGKDD Explorations Newsletter, 20(2), 5-23.</li> </ul> <p><a href="https://www.amazon.ae/Unicycles-Mountain-Outdoor-Unicycle-18Inch/dp/B098F53K7X">Thumbnail image source</a></p>]]></content><author><name>M. Amintoosi</name></author><category term="distill"/><category term="formatting"/><summary type="html"><![CDATA[Introduction to Bike Rental Platforms, Datasets and Methods]]></summary></entry><entry><title type="html">Data Augmentation for Fire Detection</title><link href="https://fumcs.github.io/blog/2022/ST-for-DA-in-FD/" rel="alternate" type="text/html" title="Data Augmentation for Fire Detection"/><published>2022-12-05T00:00:00+00:00</published><updated>2022-12-05T00:00:00+00:00</updated><id>https://fumcs.github.io/blog/2022/ST-for-DA-in-FD</id><content type="html" xml:base="https://fumcs.github.io/blog/2022/ST-for-DA-in-FD/"><![CDATA[<p>Style transfer is a technique that allows you to change the appearance of an image by applying the style of another image. For example, you can make a photo look like a painting by transferring the style of a famous artist. Style transfer is usually done by using neural networks or deep learning, which can learn the features and patterns of different images and blend them together. Style transfer can be used for various purposes, such as creating digital art, enhancing photos, or generating new images. The following image show an instance of style transfer. Other instances could be accesible from <a href="https://github.com/mamintoosi/MMM-Artistic-photoes">our repository</a>.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/ST_for_DA_2022/fox2_feathers-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/ST_for_DA_2022/fox2_feathers-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/ST_for_DA_2022/fox2_feathers-1400.webp"/> <img src="/assets/img/ST_for_DA_2022/fox2_feathers.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="Style Transfer" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Unleashing the power of style transfer to enhance fire detection is done and published in a paper entitled by "Style Transfer for Data Augmentation in Convolutional Neural Networks Applied to Fire Detection". The Style of the lower left image is transfered to upper left image. </div> <p>Paper Abstract:</p> <p>In realm of deep learning, the availability of robust training data is paramount. To overcome the scarcity of training samples, we delve into the realm of “data augmentation” techniques. Within this study, we harness the transformative capabilities of the “style transfer” algorithm, which enables the transfer of visual styles from daytime to nighttime images. By leveraging this approach, we augment our training dataset for fire detection, where nighttime samples are limited. The experimental results demonstrate a notable 7% increase in the correct detection rate, affirming the efficacy of our data augmentation method. For comprehensive insights, please consult the corresponding <a href="https://github.com/mamintoosi/ST-for-DA-in-FD">Github repository</a>.</p> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/ST_for_DA_2022/img31-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/ST_for_DA_2022/img31-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/ST_for_DA_2022/img31-1400.webp"/> <img src="/assets/img/ST_for_DA_2022/img31.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="Style Transfer" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="row"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" media="(max-width: 480px)" srcset="/assets/img/ST_for_DA_2022/img35-480.webp"/> <source class="responsive-img-srcset" media="(max-width: 800px)" srcset="/assets/img/ST_for_DA_2022/img35-800.webp"/> <source class="responsive-img-srcset" media="(max-width: 1400px)" srcset="/assets/img/ST_for_DA_2022/img35-1400.webp"/> <img src="/assets/img/ST_for_DA_2022/img35.jpg" class="img-fluid rounded z-depth-1" width="auto" height="auto" title="Style Transfer" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Some daytime images that transfered to nighttime using a night image (middle). </div>]]></content><author><name>M. Amintoosi</name></author><category term="research"/><category term="DL,"/><category term="GAN"/><summary type="html"><![CDATA[How to use Style Tranfer for Data Augmentation in a Fire Detection System]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://fumcs.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://fumcs.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://fumcs.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry></feed>